// Generated by CoffeeScript 1.7.1

/*
XboxController (stick + buttons) for touch devices
Based on the touch demo by Seb Lee-Delisle <http://seb.ly/>

@class bkcore.controllers.XboxController
@author Thibaut 'BKcore' Despoulain <http://bkcore.com>
*/

var GE = new GE();

(function() {
  var XboxController, Vec2, exports, _base;

  XboxController = (function() {
    XboxController.isCompatible = function() {
      return true;
    };


    /*
     Creates a new XboxController

     @param buttonCallback function Callback for non-stick touches
    */

    function XboxController(buttonCallback) {

      this.buttonCallback = buttonCallback != null ? buttonCallback : null;
      this.active = true;

      this.interpretControllerData();
    };

    /*
     @private
    */

    XboxController.prototype.interpretControllerData = function () {
      var socket =  GE.socket, me = this,
        keys = {
          left: false,
          right: false,
          forward: false,
          ltrigger: false,
          rtrigger: false
        };

      socket.on('generalerror', function (msg) {
        GE.showError(msg);
      });

      socket.on('up', function () {
        keys.forward = true;

        me.buttonCallback(keys);
      });

      socket.on('up:none', function () {
        keys.forward = false;

        me.buttonCallback(keys);
      });

      socket.on('upleft', function () {
        keys.forward = true;
        keys.left = true;

        me.buttonCallback(keys);
      });

      socket.on('upleft:none', function () {
        keys.left = false;

        me.buttonCallback(keys);
      });

      socket.on('upright', function () {
        keys.forward = true;
        keys.right = true;

        me.buttonCallback(keys);
      });

      socket.on('upright:none', function () {
        keys.right = false;

        me.buttonCallback(keys);
      });
    };

    return XboxController;

  })();


  /*
   Exports
   @package bkcore
  */

  exports = exports != null ? exports : this;

  exports.bkcore || (exports.bkcore = {});

  (_base = exports.bkcore).controllers || (_base.controllers = {});

  exports.bkcore.controllers.XboxController = XboxController;

}).call(this);
